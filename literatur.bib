% Encoding: UTF-8

@Misc{SurgSim,
  howpublished = {\url{wiki.tum.de/display/btt/Group+4%3A+Surgical+Simulators}},
  note         = {aufgerufen: 14:30, 4 März 2021},
  title        = {Surgical Simulators},
  year         = {2017},
}

@Article{UPP,
  author     = {Macklin, Miles and M\"{u}ller, Matthias and Chentanez, Nuttapong and Kim, Tae-Yong},
  journal    = {ACM Trans. Graph.},
  title      = {Unified Particle Physics for Real-Time Applications},
  year       = {2014},
  issn       = {0730-0301},
  month      = jul,
  number     = {4},
  volume     = {33},
  abstract   = {We present a unified dynamics framework for real-time visual effects. Using particles connected by constraints as our fundamental building block allows us to treat contact and collisions in a unified manner, and we show how this representation is flexible enough to model gases, liquids, deformable solids, rigid bodies and cloth with two-way interactions. We address some common problems with traditional particle-based methods and describe a parallel constraint solver based on position-based dynamics that is efficient enough for real-time applications.},
  address    = {New York, NY, USA},
  articleno  = {153},
  doi        = {10.1145/2601097.2601152},
  issue_date = {July 2014},
  keywords   = {fluid simulation, position-based dynamics, cloth simulation, simulation, two-way fluid coupling, unified solver},
  numpages   = {12},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/2601097.2601152},
}

@Misc{UE4FlexDoc,
  howpublished = {\url{gameworksdocs.nvidia.com/FleX/1.2/ue4_docs/FLEXUe4_Intro.html}},
  note         = {aufgerufen: 13:30, 5 März 2021},
  title        = {Unreal 4 FleX integration - Documentation},
  year         = {2017},
}

@Misc{FlexD3D,
  howpublished = {\url{gdcvault.com/play/1024344/}},
  note         = {aufgerufen: 15:00, 5 März 2021},
  title        = {D3D Async Compute for Physics: Bullets, Bandages, and Blood},
  year         = {2017},
}

@Misc{ue4physics,
  howpublished = {\url{docs.unrealengine.com/en-US/InteractiveExperiences/Physics/index.html}},
  note         = {aufgerufen: 14:00, 9 März 2021},
  title        = {Unreal Engine Documentation - Physics},
  year         = {2021},
}

@Article{PBD,
  author   = {Matthias Müller and Bruno Heidelberger and Marcus Hennix and John Ratcliff},
  journal  = {Journal of Visual Communication and Image Representation},
  title    = {Position based dynamics},
  year     = {2007},
  issn     = {1047-3203},
  number   = {2},
  pages    = {109-118},
  volume   = {18},
  abstract = {The most popular approaches for the simulation of dynamic systems in computer graphics are force based. Internal and external forces are accumulated from which accelerations are computed based on Newton’s second law of motion. A time integration method is then used to update the velocities and finally the positions of the object. A few simulation methods (most rigid body simulators) use impulse based dynamics and directly manipulate velocities. In this paper we present an approach which omits the velocity layer as well and immediately works on the positions. The main advantage of a position based approach is its controllability. Overshooting problems of explicit integration schemes in force based systems can be avoided. In addition, collision constraints can be handled easily and penetrations can be resolved completely by projecting points to valid locations. We have used the approach to build a real time cloth simulator which is part of a physics software library for games. This application demonstrates the strengths and benefits of the method.},
  doi      = {https://doi.org/10.1016/j.jvcir.2007.01.005},
  keywords = {Physically based simulation, Game physics, Integration schemes, Cloth simulation},
  url      = {https://www.sciencedirect.com/science/article/pii/S1047320307000065},
}

@Comment{jabref-meta: databaseType:bibtex;}
